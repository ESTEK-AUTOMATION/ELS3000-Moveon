// IMPORTANT: This code is auto-generated by the HeaderGen every time solution is built.

// Copyright (c) 2015 - 2020 IntervalZero, Inc.  All rights reserved.
//
// This file defines macros that represent custom Win32 error codes that RTX64 real-time APIs can
// return.  Custom error codes all have bit 29 set.  See:
//
//    https://msdn.microsoft.com/en-us/library/ms680627.aspx
//
// which says:
//
//    Bit 29 is reserved for application-defined error codes; no system error code has this bit set.
//    If you are defining an error code for your application, set this bit to indicate that the
//    error code has been defined by your application and to ensure that your error code does not
//    conflict with any system-defined error codes.
//
// RTX64 real-time APIs can still return normal Win32 error codes, such as ERROR_FILE_NOT_FOUND (2).
// These error codes extend the range of possible error codes to include codes specific to RTX64.

#pragma once

// Custom error codes must have bit 29 set.  Microsoft guarantees that no regular Win32 error code
// will ever have bin 29 set.  IMPORTANT: Do not change the name of this macro!
#define RT_CUSTOM_ERROR(VALUE)  ((VALUE) | (1 << 29))
    

// Description: No RTX64 runtime license is available.
#define RT_ERROR_NO_RUNTIME_LICENSE                        RT_CUSTOM_ERROR(1)

// Description: The RTX64 runtime license has expired.
#define RT_ERROR_EXPIRED_RUNTIME_LICENSE                   RT_CUSTOM_ERROR(2)

// Description: No valid license was found for the given product feature code.
#define RT_ERROR_NO_LICENSE                                RT_CUSTOM_ERROR(3)

// Description: No RTX64 SDK license was available when this application (or an RTDLL on which it
// depends) was built. You may be able to resolve this error by rebuilding the application.
#define RT_ERROR_MODULE_NO_SDK_LICENSE                     RT_CUSTOM_ERROR(4)

// Description: This application (or an RTDLL on which it depends) was built with an evaluation
// RTX64 SDK license. It cannot be executed when the RTX64 runtime license is a retail license.
// You may be able to resolve this error by rebuilding the application.
#define RT_ERROR_MODULE_EVAL_SDK_LICENSE                   RT_CUSTOM_ERROR(5)

// Description: This application (or an RTDLL on which it depends) is missing important RTX64
// license information. You may be able to resolve this error by rebuilding the application.
#define RT_ERROR_MODULE_LICENSE_INFO_MISSING               RT_CUSTOM_ERROR(6)

// Description: This application (or an RTDLL on which it depends) contains corrupted license
// information. You may be able to resolve this error by rebuilding the application.
#define RT_ERROR_MODULE_LICENSE_INFO_CORRUPT               RT_CUSTOM_ERROR(7)

// Description: One or more object files in this application (or an RTDLL on which it depends) were
// built using an RTX64 SDK version that is incompatible with the current RTX64 runtime.
// You may be able to resolve this error by rebuilding the application.
#define RT_ERROR_MODULE_UNSUPPORTED_SDK                    RT_CUSTOM_ERROR(8)

// Description: License data is corrupt.
#define RT_ERROR_CORRUPT_LICENSE_DATA                      RT_CUSTOM_ERROR(9)

// Description: RTX64 Subsystem was unable to communicate with required services.
#define RT_ERROR_SERVICE_ACCESS_FAILURE                    RT_CUSTOM_ERROR(10)

// Description: Internal error 1.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_1                                RT_CUSTOM_ERROR(11)

// Description: Internal error 2.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_2                                RT_CUSTOM_ERROR(12)

// Description: Internal error 3.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_3                                RT_CUSTOM_ERROR(13)

// Description: Internal error 4.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_4                                RT_CUSTOM_ERROR(14)

// Description: Internal error 5.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_5                                RT_CUSTOM_ERROR(15)

// Description: Internal error 6.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_6                                RT_CUSTOM_ERROR(16)

// Description: Internal error 7.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_7                                RT_CUSTOM_ERROR(17)

// Description: Internal error 8.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_8                                RT_CUSTOM_ERROR(18)

// Description: Internal error 9.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_9                                RT_CUSTOM_ERROR(19)

// Description: Internal error 10.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_10                               RT_CUSTOM_ERROR(20)

// Description: Internal error 11.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_11                               RT_CUSTOM_ERROR(21)

// Description: Internal error 12.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_12                               RT_CUSTOM_ERROR(22)

// Description: Internal error 13.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_13                               RT_CUSTOM_ERROR(23)

// Description: Attempt to load a library that is not an RTDLL. RTSS applications and RTDLL
// libraries cannot link implicitly or explicitly to Windows dynamic link libraries (DLLs). Please
// make sure your project's linker inputs do not contain references to kernel32.lib, user32.lib, or
// any other Windows DLL import library.
#define RT_ERROR_INVALID_BINARY_FORMAT                     RT_CUSTOM_ERROR(24)

// Description: The RTX64 subsystem needs to be restarted for a configuration change to take effect.
#define RT_ERROR_RESTART_SUBSYSTEM                         RT_CUSTOM_ERROR(25)

// Description: The RTX64 subsystem is not configured, but an operation was attempted that requires
// it to be configured.
#define RT_ERROR_SUBSYSTEM_NOT_CONFIGURED                  RT_CUSTOM_ERROR(26)

// Description: A structure passed to an API is too small.
#define RT_ERROR_STRUCTURE_TOO_SMALL                       RT_CUSTOM_ERROR(27)

// Description: Internal error 14.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_14                               RT_CUSTOM_ERROR(28)

// Description: The RTX64 TCP/IP stack has no license, but an operation was attempted that requires
// it to be licensed.
#define RT_ERROR_NO_STACK_LICENSE                          RT_CUSTOM_ERROR(29)

// Description: An operation failed to acquire the mutex that serializes starting/stopping the RTX64
// subsystem.
#define RT_ERROR_SUBSYSTEM_STARTSTOP_LOCK_FAILURE          RT_CUSTOM_ERROR(30)

// Description: A timeout occurred while attempting to start the RTX64 subsystem.
#define RT_ERROR_TIMEOUT_STARTING_SUBSYSTEM                RT_CUSTOM_ERROR(31)

// Description: A timeout occurred while attempting to start the RTX64 subsystem.
#define RT_ERROR_TIMEOUT_STOPPING_SUBSYSTEM                RT_CUSTOM_ERROR(32)

// Description: A timeout occurred while attempting to start the RTX64 TCP/IP stack.
#define RT_ERROR_TIMEOUT_STARTING_NETWORK                  RT_CUSTOM_ERROR(33)

// Description: Internal error 15.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_15                               RT_CUSTOM_ERROR(34)

// Description: Internal error 16.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_16                               RT_CUSTOM_ERROR(35)

// Description: The RTX64 subsystem is not started but an operation was attempted that requires it
// to be started.
#define RT_ERROR_SUBSYSTEM_NOT_STARTED                     RT_CUSTOM_ERROR(36)

// Description: The subsystem is not stopped but an operation was attempted that requires it to be
// stopped.
#define RT_ERROR_SUBSYSTEM_NOT_STOPPED                     RT_CUSTOM_ERROR(37)

// Description: The subsystem cannot be stopped, because one or more real-time processes are
// running.
#define RT_ERROR_RTSS_PROCESSES_RUNNING                    RT_CUSTOM_ERROR(38)

// Description: The subsystem cannot be stopped, because one or more real-time proxy processes are
// running.
#define RT_ERROR_PROXY_PROCESSES_RUNNING                   RT_CUSTOM_ERROR(39)

// Description: An operation failed to acquire the mutex that serializes starting/stopping the RTX64
// TCP/IP stack.
#define RT_ERROR_NETWORK_STARTSTOP_LOCK_FAILURE            RT_CUSTOM_ERROR(40)

// Description: The RTX64 TCP/IP stack is stopped.
#define RT_ERROR_NETWORK_STOPPED                           RT_CUSTOM_ERROR(41)

// Description: The RTX64 TCP/IP stack is running.
#define RT_ERROR_NETWORK_STARTED                           RT_CUSTOM_ERROR(42)

// Description: Internal error 17.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_17                               RT_CUSTOM_ERROR(43)

// Description: An operation was attempted that requires the RTX64 TCP/IP stack to be installed, but
// it is not installed.
#define RT_ERROR_NETWORK_NOT_INSTALLED                     RT_CUSTOM_ERROR(44)

// Description: Internal error 18.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_18                               RT_CUSTOM_ERROR(45)

// Description: The RTX64 TCP/IP stack cannot be stopped, because one or more stack client processes
// are still running.
#define RT_ERROR_NETWORK_CLIENTS_EXIST                     RT_CUSTOM_ERROR(46)

// Description: The subsystem is busy starting or stopping.
#define RT_ERROR_SUBSYSTEM_START_STOP_IN_PROGRESS          RT_CUSTOM_ERROR(47)

// Description: The RTX64 TCP/IP stack and NAL need to be restarted for configuration changes to take effect.
#define RT_ERROR_RESTART_NETWORK                           RT_CUSTOM_ERROR(48)

// Description: There are no interface slots left. The maximum number of interfaces is 99.
#define RT_ERROR_TOO_MANY_NETWORK_INTERFACES               RT_CUSTOM_ERROR(49)

// Description: Monitoring is already enabled.
#define RT_ERROR_MONITORING_ALREADY_ENABLED                RT_CUSTOM_ERROR(50)

// Description: Monitoring is already disabled.
#define RT_ERROR_MONITORING_ALREADY_DISABLED               RT_CUSTOM_ERROR(51)

// Description: Monitoring is already started.
#define RT_ERROR_MONITORING_ALREADY_STARTED                RT_CUSTOM_ERROR(52)

// Description: Monitoring is already stopped.
#define RT_ERROR_MONITORING_ALREADY_STOPPED                RT_CUSTOM_ERROR(53)

// Description: Monitoring cannot be disabled, because it is started.
#define RT_ERROR_MONITORING_IS_STARTED                     RT_CUSTOM_ERROR(54)

// Description: Monitoring cannot be disabled, because it is started.
#define RT_ERROR_MONITORING_NOT_ENABLED                    RT_CUSTOM_ERROR(55)

// Description: Windows needs to be restarted.
#define RT_ERROR_RESTART_WINDOWS                           RT_CUSTOM_ERROR(56)

// Description: A timeout occurred while attempting to stop the RTX64 TCP/IP stack.
#define RT_ERROR_NETWORK_STOP_TIMEOUT                      RT_CUSTOM_ERROR(57)

// Description: Internal error 19.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_19                               RT_CUSTOM_ERROR(58)

// Description: Internal error 20.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_20                               RT_CUSTOM_ERROR(59)

// Description: Internal error 21.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_21                               RT_CUSTOM_ERROR(60)

// Description: An API succeeded but needed to modify configured processor numbers to
// prevent invalid process numbers.
#define RT_WARNING_INCONSISTENT_PROCESSOR_CONFIGURATION    RT_CUSTOM_ERROR(61)

// Description: An API succeeded but needed to modify configured timers or timeout values to
// maintain RTX64 subsystem consistency.
#define RT_WARNING_TIMER_VALUES_ROUNDED                    RT_CUSTOM_ERROR(62)

// Description: Internal error 22.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_22                               RT_CUSTOM_ERROR(63)

// Description: Internal error 23.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_23                               RT_CUSTOM_ERROR(64)

// Description: Internal error 24.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_24                               RT_CUSTOM_ERROR(65)

// Description: Network interface configuration friendly name is invalid.
#define RT_ERROR_FRIENDLY_NAME_INVALID                     RT_CUSTOM_ERROR(66)

// Description: Network interface configuration driver name is invalid.
#define RT_ERROR_DRIVER_INVALID                            RT_CUSTOM_ERROR(67)

// Description: Network interface configuration filter driver name is invalid.
#define RT_ERROR_FILTER_DRIVER_INVALID                     RT_CUSTOM_ERROR(68)

// Description: Network interface configuration instance ID is invalid.
#define RT_ERROR_DEVICE_INSTANCE_ID_INVALID                RT_CUSTOM_ERROR(69)

// Description: Network interface configuration gateway is invalid.
#define RT_ERROR_GATEWAY_INVALID                           RT_CUSTOM_ERROR(70)

// Description: Network interface configuration PCI BUS location is invalid.
#define RT_ERROR_PCI_BUS_LOCATION_INVALID                  RT_CUSTOM_ERROR(71)

// Description: Network interface configuration IPV6 address is invalid.
#define RT_ERROR_IPV6_ADDRESS_INVALID                      RT_CUSTOM_ERROR(72)

// Description: Network interface configuration number of IPv4 configurations is too small.
#define RT_ERROR_NUMBER_OF_IPV4_CONFIGURATIONS_TOO_SMALL   RT_CUSTOM_ERROR(73)

// Description: Network interface configuration number of IPv4 configurations is too high.
#define RT_ERROR_NUMBER_OF_IPV4_CONFIGURATIONS_TOO_HIGH    RT_CUSTOM_ERROR(74)

// Description: Network interface configuration IPv4 address is invalid.
#define RT_ERROR_IPV4_ADDRESS_INVALID                      RT_CUSTOM_ERROR(75)

// Description: Network interface configuration netmask is invalid.
#define RT_ERROR_NETMASK_INVALID                           RT_CUSTOM_ERROR(76)

// Description: Network interface configuration IPv6 prefix is invalid.
#define RT_ERROR_IPV6_PREFIX_INVALID                       RT_CUSTOM_ERROR(77)

// Description: Network interface configuration IPv6 interrupt priority is invalid.
#define RT_ERROR_INTERRUPT_PRIORITY_INVALID                RT_CUSTOM_ERROR(78)

// Description: Network interface configuration MTU is invalid.
#define RT_ERROR_MTU_INVALID                               RT_CUSTOM_ERROR(79)

// Description: Network interface configuration ReceiveIdealProcessor is invalid.
#define RT_ERROR_RECEIVEIDEALPROCESSOR_INVALID             RT_CUSTOM_ERROR(80)

// Description: Network interface configuration InterruptIdealProcessor is invalid.
#define RT_ERROR_INTERRUPTIDEALPROCESSOR_INVALID           RT_CUSTOM_ERROR(81)

// Description: Network interface configuration LinkStatusIdealProcessor is invalid.
#define RT_ERROR_LINKSTATUSIDEALPROCESSOR_INVALID          RT_CUSTOM_ERROR(82)

// Description: Network interface configuration link status priority is invalid.
#define RT_ERROR_LINK_STATUS_PRIORITY_INVALID              RT_CUSTOM_ERROR(83)

// Description: Network interface configuration receive priority is invalid.
#define RT_ERROR_RECEIVE_PRIORITY_INVALID                  RT_CUSTOM_ERROR(84)

// Description: Network interface configuration interrupt type is invalid.
#define RT_ERROR_INTERRUPT_TYPE_INVALID                    RT_CUSTOM_ERROR(85)

// Description: Network interface configuration number of receive buffers is invalid.
#define RT_ERROR_NUMBER_OF_RECEIVE_BUFFERS_INVALID         RT_CUSTOM_ERROR(86)

// Description: Network interface configuration number of transmit buffers is invalid.
#define RT_ERROR_NUMBER_OF_TRANSMIT_BUFFERS_INVALID        RT_CUSTOM_ERROR(87)

// Description: Internal error 25.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_25                               RT_CUSTOM_ERROR(88)

// Description: Network interface configuration link status property is invalid.
#define RT_ERROR_LINK_STATUS_INVALID                       RT_CUSTOM_ERROR(89)

// Description: A folder was specified more than once in the search path.
#define RT_ERROR_DUPLICATE_SEARCH_PATH                     RT_CUSTOM_ERROR(90)

// Description: An error occurred when accessing an RTX64 Registry key or value.
#define RT_ERROR_REGISTRY_MISSING                          RT_CUSTOM_ERROR(91)

// Description: Internal error 26.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_26                               RT_CUSTOM_ERROR(92)

// Description: An operation failed to acquire the mutex that serializes scheduled process operations
#define RT_ERROR_SCHEDULED_PROCESS_LOCK_FAILURE            RT_CUSTOM_ERROR(93)

// Description: Internal error 27.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_27                               RT_CUSTOM_ERROR(94)

// Description: No scheduled process was found for the given ID or order.
#define RT_ERROR_SCHEDULED_PROCESS_NOT_FOUND               RT_CUSTOM_ERROR(95)

// Description: The specified interrupt type is incorrect.
#define RT_ERROR_INCORRECT_INTERRUPT_TYPE                  RT_CUSTOM_ERROR(96)

// Description: Failed to attach to the interrupt.
#define RT_ERROR_FAILED_TO_ATTACH_INTERRUPT                RT_CUSTOM_ERROR(97)

// Description: Error translating the PCI bus address.
#define RT_ERROR_TRANSLATING_PCI_BUS_ADDRESS               RT_CUSTOM_ERROR(98)

// Description: Error mapping memory registers.
#define RT_ERROR_MAPPING_REGISTERS                         RT_CUSTOM_ERROR(99)

// Description: The adapter's MAC address does not match the configuration.
#define RT_ERROR_MAC_ADDRESS_MISMATCH                      RT_CUSTOM_ERROR(100)

// Description: Cannot start a new instance of the NAL since it is already loaded.
#define RT_NAL_PROCESS_ALREADY_LOADED                      RT_CUSTOM_ERROR(101)

// Description: The specified interrupt priority is invalid.
#define RT_INVALID_INTERRUPT_PRIORITY                      RT_CUSTOM_ERROR(102)

// Description: Internal error 28.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_28                               RT_CUSTOM_ERROR(103)

// Description: The TCP/IP MSpace size must be at least 2176 KB larger than the TCP/IP Memory configuration parameter when auto-expand of the TCP/IP MSpaces is disabled.
#define RT_ERROR_TCPIP_MEMORY_INVALID                      RT_CUSTOM_ERROR(104)

// Description: The feature is not available on this system. Cannot change values pertaining to this feature.
#define RT_ERROR_FEATURE_NOT_AVAILABLE                     RT_CUSTOM_ERROR(105)

// Description: Internal error 29.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_29                               RT_CUSTOM_ERROR(106)

// Description: Maximum server console log path name length exceeded.
#define RT_ERROR_CONSOLE_LOG_PATH_NAME_TOO_LONG            RT_CUSTOM_ERROR(107)

// Description: Unable to determine the number of processors on this system.
#define RT_ERROR_CANT_DETERMINE_NUM_PROCESSORS             RT_CUSTOM_ERROR(108)

// Description: The specified ideal processor is invalid.
#define RT_ERROR_INVALID_IDEAL_PROCESSOR                   RT_CUSTOM_ERROR(109)

// Description: The specified affinity mask is invalid.
#define RT_ERROR_INVALID_AFFINITY_MASK                     RT_CUSTOM_ERROR(110)

// Description: Internal error 30.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_30                               RT_CUSTOM_ERROR(111)

// Description: Maximum number of loaded modules has been reached.  To change this limit,
// see documentation for RTX64 Registry value MaxModules.
#define RT_ERROR_MAX_MODULES_LIMIT_REACHED                 RT_CUSTOM_ERROR(112)

// Description: Internal error 31.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_31                               RT_CUSTOM_ERROR(113)

// Description: The System is not currently booted from the RTX64 boot configuration.
#define RT_ERROR_RTX64_BOOT_CONFIG                         RT_CUSTOM_ERROR(114)

// Description: The Monitoring API called did not recognize an MF_EVENT_KIND passed into it.  
// This could be caused by user error or due to mismatch of SDK and Runtime.
#define RT_ERROR_UNKNOWN_MONITORING_EVENT                  RT_CUSTOM_ERROR(115)

// Description: The number of Windows processors plus number of Rtss process exceeds the number of cores of the system.
#define RT_ERROR_RTX64_TOO_MANY_CORES                      RT_CUSTOM_ERROR(116)

// Description: Monitoring cannot transition from the current state to the requested state.
#define RT_ERROR_MONITORING_INVALID_STATE_TRANSITION       RT_CUSTOM_ERROR(117)

// Description: Monitoring cannot be paused when it is already paused.
#define RT_ERROR_MONITORING_ALREADY_PAUSED                 RT_CUSTOM_ERROR(118)

// Description: Monitoring cannot create session file.
#define RT_ERROR_CREATING_MONITOR_SESSION                  RT_CUSTOM_ERROR(119)

// Description: Network interface field XmitCompleteIdealProcessor is invalid.
#define RT_ERROR_XMITCOMPLETEIDEALPROCESSOR_INVALID        RT_CUSTOM_ERROR(120)

// Description: Network interface field XmitCompletePriority is invalid.
#define RT_ERROR_XMITCOMPLETEPRIORITY_INVALID              RT_CUSTOM_ERROR(121)

// Description: Network interface field DefaultReceiveQueue is invalid.
#define RT_ERROR_DEFAULTRECEIVEQUEUE_INVALID               RT_CUSTOM_ERROR(122)

// Description: Network interface field NumberOfRecvQueues is invalid.
#define RT_ERROR_NUMBEROFRECVQUEUES_INVALID                RT_CUSTOM_ERROR(123)

// Description: Network interface field NumberOfXmitQueues is invalid.
#define RT_ERROR_NUMBEROFXMITQUEUE_INVALID                 RT_CUSTOM_ERROR(124)

// Description: Network interface field MaxPacketSize is invalid.
#define RT_ERROR_MAXPACKETSIZE_INVALID                     RT_CUSTOM_ERROR(125)

// Description: Internal error 32.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_32                               RT_CUSTOM_ERROR(126)

// Description: The RTX64 NAL is started.
#define RT_ERROR_NAL_STARTED                               RT_CUSTOM_ERROR(127)

// Description: Timeout starting NAL. The state of the NAL may change after this error has been generated.
#define RT_ERROR_TIMEOUT_STARTING_NAL                      RT_CUSTOM_ERROR(128)

// Description: NAL process terminated unexpectedly.
#define RT_ERROR_NAL_TERMINATED_UNEXPECTEDLY               RT_CUSTOM_ERROR(129)

// Description: The maximum sockets value for the network is invalid.
#define RT_ERROR_MAXSOCKETS_INVALID                        RT_CUSTOM_ERROR(130)

// Description: The maximum concurrency value for the network is invalid.
#define RT_ERROR_MAXCONCURRENCY_INVALID                    RT_CUSTOM_ERROR(131)

// Description: The tick interval for the network is out of bounds.
#define RT_ERROR_TICKINTERVAL_OUT_OF_BOUNDS                RT_CUSTOM_ERROR(132)

// Description: The timer thread' priority for the network is invalid.
#define RT_ERROR_TIMERPRIORITY_INVALID                     RT_CUSTOM_ERROR(133)

// Description: The timer thread's ideal processor for the network is invalid.
#define RT_ERROR_TIMERIDEALPROCESSOR_INVALID               RT_CUSTOM_ERROR(134)

// Description: The NAL or TCPIP stack's ideal processor is invalid.
#define RT_ERROR_NETWORKIDEALPROCESSOR_INVALID             RT_CUSTOM_ERROR(135)

// Description: The IP Reassembly value for the network is invalid.
#define RT_ERROR_IPREASSEMBLY_INVALID                      RT_CUSTOM_ERROR(136)

// Description: The HAL Timer Period for the subsystem is invalid.
#define RT_ERROR_HALTIMER_INVALID                          RT_CUSTOM_ERROR(137)

// Description: The Default Time Quantum for the subsystem is invalid.
#define RT_ERROR_DEFAULTTIMEQUANTUM_INVALID                RT_CUSTOM_ERROR(138)

// Description: Timeout stopping NAL. The state of the NAL may change after this error has been generated.
#define RT_ERROR_TIMEOUT_STOPPING_NAL                      RT_CUSTOM_ERROR(139)

// Description: The RTX64 NAL is stopped.
#define RT_ERROR_NAL_STOPPED                               RT_CUSTOM_ERROR(140)

// Description: Cannot stop the NAL because NAL clients are running.
#define RT_ERROR_NAL_CLIENTS_EXIST                         RT_CUSTOM_ERROR(141)

// Description: Cannot stop the RT-TCP/IP because Stack clients are running.
#define RT_ERROR_TCPIP_CLIENTS_EXIST                       RT_CUSTOM_ERROR(142)

// Description: A timeout occurred while querying NAL status.
#define RT_ERROR_TIMEOUT_QUERYING_NAL_STATUS               RT_CUSTOM_ERROR(143)

// Description: A timeout occurred while querying TCPIP status.
#define RT_ERROR_TIMEOUT_QUERYING_TCPIP_STATUS             RT_CUSTOM_ERROR(144)

// Description: A timeout occurred while querying network interface status.
#define RT_ERROR_TIMEOUT_QUERYING_INTERFACE_STATUS         RT_CUSTOM_ERROR(145)

// Description: A timeout occurred while querying NAL client process IDs.
#define RT_ERROR_TIMEOUT_QUERYING_NAL_CLIENT_PIDS          RT_CUSTOM_ERROR(146)

// Description: A timeout occurred while querying TCPIP client process IDs.
#define RT_ERROR_TIMEOUT_QUERYING_TCPIP_CLIENT_PIDS        RT_CUSTOM_ERROR(147)

// Description: Invalid NAL thread priority.
#define RT_ERROR_INVALID_NAL_THREAD_PRIORITY               RT_CUSTOM_ERROR(148)

// Description: Cannot initialize more NAL clients. The maximum number of NAL clients is 2048.
#define RT_ERROR_TOO_MANY_NAL_CLIENTS                      RT_CUSTOM_ERROR(149)

// Description: The RTX64 TCP/IP stack terminated unexpectedly.
#define RT_ERROR_TCPIP_STACK_TERMINATED_UNEXPECTEDLY       RT_CUSTOM_ERROR(150)

// Description: Description: Cannot configure more than 12 IP addresses for a single interface.
#define RT_ERROR_TOO_MANY_IP_ADDRESSES                     RT_CUSTOM_ERROR(151)

// Description: The RTX64 TCP/IP stack to be restarted for configuration changes to take effect.
#define RT_ERROR_RESTART_TCPIP                             RT_CUSTOM_ERROR(152)

// Description: Fatal error in the RTX64 TCP/IP stack.
#define RT_ERROR_TCPIP_STACK_FATAL_ERROR                   RT_CUSTOM_ERROR(153)

// Description: The RTX64 TCP/IP stack is not installed.
#define RT_ERROR_STACK_NOT_INSTALLED                       RT_CUSTOM_ERROR(154)

// Description: The RTX64 TCP/IP stack is already started.
#define RT_ERROR_STACK_STARTED                             RT_CUSTOM_ERROR(155)

// Description: The RTX64 TCP/IP stack is already stopped.
#define RT_ERROR_STACK_STOPPED                             RT_CUSTOM_ERROR(156)

// Description: The RTX64 TCP/IP stack timed out while trying to stop.
#define RT_ERROR_STACK_STOP_TIMEOUT                        RT_CUSTOM_ERROR(157)

// Description: Internal error 33.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_33                               RT_CUSTOM_ERROR(158)

// Description: Network interface is not converted to RTX64.
#define RT_ERROR_INTERFACE_NOT_CONVERTED                   RT_CUSTOM_ERROR(159)

// Description: Internal error 34.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_34                               RT_CUSTOM_ERROR(160)

// Description: The tick interval for the network is not a multiple of HAL timer interval.
#define RT_ERROR_TICKINTERVAL_NOT_MULTIPLE_OF_HAL_TIMER    RT_CUSTOM_ERROR(161)

// Description: A duplicate IPV4 address was found.
#define RT_ERROR_DUPLICATE_IPV4                            RT_CUSTOM_ERROR(162)

// Description: TCPIP support is in an invalid configuration for this interface.
#define RT_ERROR_INVALID_TCPIP_SUPPORT                     RT_CUSTOM_ERROR(163)

// Description: Scheduled process initial memory size is invalid. \n Valid range: 64 - 4194292.
#define RT_ERROR_SCHEDULED_PROCESS_INIT_MEMORY_INVALID     RT_CUSTOM_ERROR(164)

// Description: Scheduled process expand memory size is invalid. \n Valid range: 64 - 4194292.
#define RT_ERROR_SCHEDULED_PROCESS_EXPAND_MEMORY_INVALID   RT_CUSTOM_ERROR(165)

// Description: Internal error 34.  Please contact IntervalZero support for more information.
#define RT_ERROR_INTERNAL_35                               RT_CUSTOM_ERROR(166)

// Description: The NAL dispatch thread's ideal processor is invalid.
#define RT_ERROR_NALDISPATCHIDEALPROCESSOR_INVALID         RT_CUSTOM_ERROR(167)
